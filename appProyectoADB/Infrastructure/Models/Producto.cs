//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infrastructure.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    [MetadataType(typeof(ProductoMetadata))]

    public partial class Producto
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Producto()
        {
            this.Bodega = new HashSet<Bodega>();
            this.GestionInventario = new HashSet<GestionInventario>();
            this.Proveedor = new HashSet<Proveedor>();
        }
    
        public int IdProducto { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "No ha seleccioado una Categoria.")]
        public int IdCategoria { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Debe brindar un nombre")]
        public string Nombre_Producto { get; set; }
        public string Descripcion { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "No se ha denifido un precio.")]
        [Range(1, 10000000)]
        public Nullable<decimal> Precio { get; set; }

        [DataType(DataType.Date)]
        public Nullable<System.DateTime> FechaCreacion { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "Indique una fecha de vencimiento.")]
        [DataType(DataType.Date)]
        public Nullable<System.DateTime> FechaVence { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "No se ha asignado un estado.")]
        public Nullable<byte> Estado { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Indica la cantidad disponible.")]
        [Range(1, 999)]
        public Nullable<int> CantidadDisponible { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "No se ha denifido una cantidad mínima.")]
        [Range(1, 999)]
        public Nullable<int> CantidadStockMin { get; set; }
        [Required(AllowEmptyStrings = false, ErrorMessage = "No se ha denifido una cantidad máxima.")]
        [Range(1, 999)]
        public Nullable<int> CantidadStockMax { get; set; }
    
        public virtual Categoria Categoria { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Bodega> Bodega { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<GestionInventario> GestionInventario { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Debe seleccionar almenos un proveedor.")]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Proveedor> Proveedor { get; set; }
    }
}
