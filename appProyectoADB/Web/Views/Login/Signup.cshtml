@using Web.Enum
@model Infrastructure.Models.Usuario

@{
    ViewBag.Title = "Registrarse";
    Layout = "~/Views/Shared/_LoginUser.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Save", "Usuario", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal justify-content-center">
        <h4>Datos del nuevo usuario:</h4>
        <hr class="col-md-10" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroIdentificacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroIdentificacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroIdentificacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdRol, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.IdRol, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.IdRol, (SelectList)ViewBag.TipoRoles, "Seleccione un Tipo", htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.IdRol, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Clave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Clave, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class="form-check">
                    @Html.RadioButtonFor(model => model.Estado, ((byte)ETipoEstado.Activo), new { @class = "form-check-input", disabled = "disabled" })Activo
                </div><div class="form-check">
                    @Html.RadioButtonFor(model => model.Estado, ((byte)ETipoEstado.Inactivo), new { @class = "form-check-input", @Checked = "checked" })Inactivo
                </div>
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <hr class="col-md-10" />
            <div class="row">
                <div class="col-10 d-md-flex justify-content-md-end">
                    <button class="btn btn-primary rounded m-1" type="submit"><i class='bx bx-save'></i><span class="px-1">Guardar</span></button>
                    <a href="@Url.Action("Index", "Login")" class="btn btn-outline-secondary rounded m-1">
                    <i class='bx bxs-x-circle'></i>
                    <span>Cancelar</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
