@using Web.Enum
@model Infrastructure.Models.Producto

@{
    ViewBag.Title = "Editar Producto";
}

@using (Html.BeginForm("Save", "Producto", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Editar Producto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdProducto)

    <div class="form-group">
        @Html.LabelFor(model => model.IdCategoria, htmlAttributes: new { @class = "control-label col-md-2" })
        @*
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdCategoria, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
            </div>
        *@
        <div class="col-md-10">
            @Html.DropDownList("IdCategoria", null, new { htmlAttributes = new { @class = "form-select" } })
            @*@Html.DropDownListFor(model => model.IdCategoria, (SelectList)ViewBag.IdCategoria, "Seleccione un categoria", htmlAttributes: new { @class = "form-select" })*@
            @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre_Producto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre_Producto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre_Producto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaCreacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaCreacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaCreacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaVence, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaVence, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaVence, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CantidadDisponible, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CantidadDisponible, new { htmlAttributes = new { @class = "form-control", min = "1", max = "50" } })
            @Html.ValidationMessageFor(model => model.CantidadDisponible, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CantidadStockMin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CantidadStockMin, new { htmlAttributes = new { @class = "form-control", min = "1", max = "50" } })
            @Html.ValidationMessageFor(model => model.CantidadStockMin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CantidadStockMax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CantidadStockMax, new { htmlAttributes = new { @class = "form-control", min = "1", max = "50" } })
            @Html.ValidationMessageFor(model => model.CantidadStockMax, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })*@
            <div class="form-check">
                @Html.RadioButtonFor(model => model.Estado, ((byte)ETipoEstado.Activo), new { @class = "form-check-input" })Activo
            </div><div class="form-check">
                @Html.RadioButtonFor(model => model.Estado, ((byte)ETipoEstado.Inactivo), new { @class = "form-check-input" })Inactivo
            </div>
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <hr />
        <div class="row">
            <div class="col-12 d-md-flex justify-content-md-end">
                <button class="btn btn-primary m-1" type="submit"><i class='bx bx-save'></i><span class="px-1">Guardar</span></button>
                <div class="btn btn-outline-secondary m-1">
                    <i class='bx bxs-x-circle'></i>
                    @Html.ActionLink("Cancelar", "Index", null, htmlAttributes: new { @class = "text-decoration-none" })
                </div>
            </div>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}